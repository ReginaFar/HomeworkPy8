# Задание 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку
#  конструктора класса (метод init()),
# который должен принимать данные (список списков) для формирования
#  матрицы.[[], [], []]
# Следующий шаг — реализовать перегрузку метода str() для вывода матрицы
# в привычном виде.

# Далее реализовать перегрузку метода add() для реализации операции
# сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.

# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, lst_1, lst_2):
        self.lst_1 = lst_1
        self.lst_2 = lst_2


    def __str__(self):
        return '\n'.join('\t'.join(map(str, lst_1)) for lst_1 in self.lst_1)


    def __add__(self):
        result = [[0, 0, 0],
                [0, 0, 0],
                [0, 0, 0]]
        for i in range(len(self.lst_1)):
            for j in range(len(self.lst_2[i])):
                result[i][j] = self.lst_1[i][j] + self.lst_2[i][j]
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in result]))


m = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]],
            [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(m)
print()
print(m.__add__())
